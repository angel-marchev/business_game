"""empty message

Revision ID: 1871f331ff29
Revises: 7b243c8226df
Create Date: 2020-11-02 09:31:20.501557

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1871f331ff29'
down_revision = '7b243c8226df'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scenario_per_period',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('demand_scenario_id', sa.Integer(), nullable=True),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('cost_fixed_administrative', sa.Integer(), nullable=True),
    sa.Column('interest_credit', sa.Float(), nullable=True),
    sa.Column('interest_overdraft', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scenario_per_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('demand_scenario_id', sa.Integer(), nullable=True),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('demand_quantity', sa.Integer(), nullable=True),
    sa.Column('sensitivity_price', sa.Float(), nullable=True),
    sa.Column('sensitivity_quality', sa.Float(), nullable=True),
    sa.Column('sensitivity_marketing', sa.Float(), nullable=True),
    sa.Column('correction_cost_labor', sa.Float(), nullable=True),
    sa.Column('correction_cost_materials_for_one_product', sa.Float(), nullable=True),
    sa.Column('cost_unpredicted', sa.Integer(), nullable=True),
    sa.Column('cost_materials_for_one_product', sa.Float(), nullable=True),
    sa.Column('cost_labor', sa.Float(), nullable=True),
    sa.Column('investment_for_one_marketing', sa.Integer(), nullable=True),
    sa.Column('investment_for_one_quality', sa.Integer(), nullable=True),
    sa.Column('quality_index_min', sa.Float(), nullable=True),
    sa.Column('quality_index_max', sa.Float(), nullable=True),
    sa.Column('marketing_index_min', sa.Float(), nullable=True),
    sa.Column('marketing_index_max', sa.Float(), nullable=True),
    sa.Column('marketing_keep_effect', sa.Float(), nullable=True),
    sa.Column('base_value_rand_quality', sa.Float(), nullable=True),
    sa.Column('cost_transport', sa.Float(), nullable=True),
    sa.Column('cost_storage', sa.Float(), nullable=True),
    sa.Column('cost_fixed_administrative', sa.Integer(), nullable=True),
    sa.Column('cost_product_manager', sa.Integer(), nullable=True),
    sa.Column('cost_new_product_manager', sa.Integer(), nullable=True),
    sa.Column('price_research', sa.Integer(), nullable=True),
    sa.Column('interest_credit', sa.Float(), nullable=True),
    sa.Column('interest_overdraft', sa.Float(), nullable=True),
    sa.Column('max_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('scenario')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scenario',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('demand_scenario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('period', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('demand_quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sensitivity_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sensitivity_quality', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sensitivity_marketing', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('correction_cost_labor', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('correction_cost_materials_for_one_product', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cost_unpredicted', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cost_materials_for_one_product', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cost_labor', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('investment_for_one_marketing', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('investment_for_one_quality', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quality_index_min', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('quality_index_max', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('marketing_keep_effect', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('base_value_rand_quality', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cost_transport', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cost_storage', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cost_fixed_administrative', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cost_product_manager', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cost_new_product_manager', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_research', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('interest_credit', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('interest_overdraft', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('marketing_index_max', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('marketing_index_min', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='scenario_product_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='scenario_pkey')
    )
    op.drop_table('scenario_per_product')
    op.drop_table('scenario_per_period')
    # ### end Alembic commands ###
